{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maksim\\\\Desktop\\\\bot-project\\\\src\\\\Components\\\\BinanceSignIn\\\\BinanceApi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './BinanceSignIn.scss';\nimport axios from 'axios';\nimport Coin from './Coin';\nimport BinanceBids from './BinanceBids';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BinanceApi(props) {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false').then(res => {\n      setCoins(res.data);\n      console.log(res.data);\n    }).catch(error => console.log(error));\n    axios.get('https://api.binance.com/api/v3/depth?symbol=LTCBTC').then(res => {\n      setHistory(res.data);\n      console.log(res.data);\n    }).catch(error => console.log(error));\n  }, []);\n  console.log(history, coins);\n\n  const handleChange = e => {\n    setSearch(e.target.value); //console.log(coins);\n    //console.log(history.bids);\n  };\n\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n  const getLatestBids = [];\n\n  if (history.bids) {\n    const getLatestBids = history.bids.slice(0, 10);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"coin-text\",\n        children: \"Search a currency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"coin-input\",\n          type: \"text\",\n          onChange: handleChange,\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), console.log(filteredCoins), filteredCoins.map(coin => {\n      return /*#__PURE__*/_jsxDEV(Coin, {\n        name: coin.name,\n        price: coin.current_price,\n        symbol: coin.symbol,\n        marketcap: coin.total_volume,\n        volume: coin.market_cap,\n        image: coin.image,\n        priceChange: coin.price_change_percentage_24h\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    }), history.map(bid => {\n      return /*#__PURE__*/_jsxDEV(BinanceBids, {\n        price: bid[0],\n        amount: bid[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BinanceApi, \"fI3ETneN5RjobzJP7S9CdIfqrBE=\");\n\n_c = BinanceApi;\nexport default BinanceApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"BinanceApi\");","map":{"version":3,"sources":["C:/Users/Maksim/Desktop/bot-project/src/Components/BinanceSignIn/BinanceApi.js"],"names":["React","useState","useEffect","axios","Coin","BinanceBids","BinanceApi","props","coins","setCoins","search","setSearch","history","setHistory","get","then","res","data","console","log","catch","error","handleChange","e","target","value","filteredCoins","filter","coin","name","toLowerCase","includes","getLatestBids","bids","slice","map","current_price","symbol","total_volume","market_cap","image","price_change_percentage_24h","id","bid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './BinanceSignIn.scss'\r\nimport axios from 'axios';\r\nimport Coin from './Coin';\r\nimport BinanceBids from './BinanceBids';\r\n\r\nfunction BinanceApi(props) {\r\n\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false'\r\n      )\r\n      .then(res => {\r\n        setCoins(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n    axios\r\n      .get(\r\n        'https://api.binance.com/api/v3/depth?symbol=LTCBTC'\r\n      )\r\n      .then(res => {\r\n        setHistory(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  console.log(history, coins);\r\n\r\n  const handleChange = e => {\r\n    setSearch(e.target.value);\r\n    //console.log(coins);\r\n    //console.log(history.bids);\r\n  };\r\n\r\n  const filteredCoins = coins.filter(coin =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  const getLatestBids = [];\r\n  if (history.bids) {\r\n    const getLatestBids = history.bids.slice(0,10);\r\n  }\r\n\r\n  return (\r\n    <div className='coin-app'>\r\n      <div className='coin-search'>\r\n        <h1 className='coin-text'>Search a currency</h1>\r\n        <form>\r\n          <input\r\n            className='coin-input'\r\n            type='text'\r\n            onChange={handleChange}\r\n            placeholder='Search'\r\n          />\r\n        </form>\r\n      </div>\r\n      {console.log(filteredCoins)}\r\n      {filteredCoins.map(coin => {\r\n        return (\r\n          <Coin\r\n            key={coin.id}\r\n            name={coin.name}\r\n            price={coin.current_price}\r\n            symbol={coin.symbol}\r\n            marketcap={coin.total_volume}\r\n            volume={coin.market_cap}\r\n            image={coin.image}\r\n            priceChange={coin.price_change_percentage_24h}\r\n          />\r\n        );\r\n      })}\r\n      {history.map(bid => {\r\n        return (<BinanceBids\r\n          price={bid[0]}\r\n          amount={bid[1]}\r\n        />);\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BinanceApi;"]},"metadata":{},"sourceType":"module"}